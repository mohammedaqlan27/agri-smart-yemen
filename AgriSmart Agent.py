import pandas as pd
from io import StringIO
import os
import google.generativeai as genai
from google.generativeai import GenerativeModel

#-----------------
# الخطوة 1: تهيئة Gemini API
#-----------------
# نقوم بقراءة المفتاح من متغير بيئة لتجنب نشره في الكود.
API_KEY = os.environ.get("GEMINI_API_KEY")

if not API_KEY:
    raise ValueError("API_KEY غير موجود. يرجى ضبط متغير بيئة باسم 'GEMINI_API_KEY' بقيمته الصحيحة قبل تشغيل الكود.")

genai.configure(api_key=API_KEY)

#-----------------
# الخطوة 2: جمع وتحليل البيانات المناخية
#-----------------
# بيانات الطقس المقدمة للمثال (لضمان عمل الكود بشكل مباشر بدون الحاجة لملف خارجي)
WEATHER_DATA_STRING = """
YEAR,MO,DY,T2M,PRECTOT
2021,1,1,18.5,0.0
2021,2,1,20.2,0.5
2021,3,1,22.1,1.2
2021,4,1,24.5,2.5
2021,5,1,26.8,0.8
2021,6,1,28.0,0.2
2021,7,1,27.5,0.0
2021,8,1,26.1,0.0
2021,9,1,25.0,2.1
2021,10,1,23.5,3.4
2021,11,1,21.8,4.1
2021,12,1,19.0,2.8
2022,1,1,18.0,0.1
2022,2,1,19.5,0.3
2022,3,1,21.0,1.5
2022,4,1,23.2,2.8
2022,5,1,25.4,1.0
2022,6,1,27.8,0.3
2022,7,1,27.1,0.0
2022,8,1,25.5,0.0
2022,9,1,24.0,2.5
2022,10,1,22.8,3.9
2022,11,1,20.5,4.5
2022,12,1,18.8,3.2
2023,1,1,17.9,0.2
"""

# قراءة البيانات باستخدام pandas
df = pd.read_csv(StringIO(WEATHER_DATA_STRING))

# تحويل البيانات إلى تنسيق سلسلة نصية
weather_data_text = df.to_string(index=False)

#-----------------
# الخطوة 3: إعداد التعليمات (الـ Prompt)
#-----------------
prompt = f"""
حلل بيانات الطقس هذه التي تخص منطقة زراعية في اليمن على مدار السنوات الماضية.
البيانات تحتوي على: السنة (YEAR)، الشهر (MO)، اليوم (DY)، ودرجة حرارة الهواء (T2M) وهطول الأمطار (PRECTOT).
بيانات الطقس:
{weather_data_text}

الهدف هو تقديم توصيات زراعية ذكية ومستدامة للمزارعين. بناءً على هذه البيانات، ما هي أفضل المحاصيل (الخضروات، الفواكه، والبذور مثل القمح والذرة والشعير) التي يمكن زراعتها والتي:
1. تتطلب أقل كمية من المياه (للحفاظ على الموارد المائية).
2. تزيد من دخل المزارعين.
3. تفيد المجتمع والأرض.
4. يمكن أن تكون بديلاً لشجرة القات.

قدم إجابتك على شكل قائمة نقاط، مع شرح لماذا كل محصول مناسب من منظور الاستدامة الاجتماعية والاقتصادية.
"""

#-----------------
# الخطوة 4: إرسال الطلب إلى Gemini AI
#-----------------
try:
    model = GenerativeModel(model_name="models/gemini-pro")
    response = model.generate_content(prompt)
    
    #-----------------
    # الخطوة 5: عرض النتائج
    #-----------------
    print("---")
    print("التوصيات الزراعية من وكيلك الذكي:")
    print(response.text)
    print("---")

except Exception as e:
    print(f"حدث خطأ: {e}")
```
eof
---

**خطواتك النهائية قبل تشغيل الكود:**

1.  **احفظ الكود:** قم بنسخ الكود الجديد واحفظه في ملف `agri_agent.py`.
2.  **ضبط متغير البيئة:** قبل أن تقوم بتشغيل الكود، يجب أن تضبط متغير البيئة `GEMINI_API_KEY` بقيمة مفتاح الـ API الخاص بك.

    * **لمستخدمي macOS/Linux (في Terminal):**
        ```bash
        export GEMINI_API_KEY="YOUR_SECRET_API_KEY_HERE"
        ```
    * **لمستخدمي Windows (في Command Prompt):**
        ```bash
        set GEMINI_API_KEY="YOUR_SECRET_API_KEY_HERE"
        
